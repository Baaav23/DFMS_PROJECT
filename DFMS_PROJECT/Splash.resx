<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>